#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.4 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// edu.missouri.math.webwork.WebworkSOAP.WebworkSOAPHandlerServiceLocator
	c557 [label=<<table title="edu.missouri.math.webwork.WebworkSOAP.WebworkSOAPHandlerServiceLocator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./WebworkSOAPHandlerServiceLocator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> WebworkSOAPHandlerServiceLocator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - WebworkSOAP_address : String </td></tr>
<tr><td align="left" balign="left"> - WebworkSOAPWSDDServiceName : String </td></tr>
<tr><td align="left" balign="left"> - ports : HashSet&lt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + WebworkSOAPHandlerServiceLocator() </td></tr>
<tr><td align="left" balign="left"> + WebworkSOAPHandlerServiceLocator(config : EngineConfiguration) </td></tr>
<tr><td align="left" balign="left"> + WebworkSOAPHandlerServiceLocator(wsdlLoc : String, sName : QName) </td></tr>
<tr><td align="left" balign="left"> + getWebworkSOAPAddress() : String </td></tr>
<tr><td align="left" balign="left"> + getWebworkSOAPWSDDServiceName() : String </td></tr>
<tr><td align="left" balign="left"> + setWebworkSOAPWSDDServiceName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getWebworkSOAP() : WebworkSOAPHandler </td></tr>
<tr><td align="left" balign="left"> + getWebworkSOAP(portAddress : URL) : WebworkSOAPHandler </td></tr>
<tr><td align="left" balign="left"> + setWebworkSOAPEndpointAddress(address : String) </td></tr>
<tr><td align="left" balign="left"> + getPort(serviceEndpointInterface : Class&lt;&gt;) : Remote </td></tr>
<tr><td align="left" balign="left"> + getPort(portName : QName, serviceEndpointInterface : Class&lt;&gt;) : Remote </td></tr>
<tr><td align="left" balign="left"> + getServiceName() : QName </td></tr>
<tr><td align="left" balign="left"> + getPorts() : Iterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setEndpointAddress(portName : String, address : String) </td></tr>
<tr><td align="left" balign="left"> + setEndpointAddress(portName : QName, address : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./WebworkSOAPHandlerServiceLocator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// edu.missouri.math.webwork.WebworkSOAP.WebworkSOAPHandlerService
	c558 [label=<<table title="edu.missouri.math.webwork.WebworkSOAP.WebworkSOAPHandlerService" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WebworkSOAPHandlerService.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> WebworkSOAPHandlerService </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getWebworkSOAPAddress() : String </td></tr>
<tr><td align="left" balign="left"> + getWebworkSOAP() : WebworkSOAPHandler </td></tr>
<tr><td align="left" balign="left"> + getWebworkSOAP(portAddress : URL) : WebworkSOAPHandler </td></tr>
		</table></td></tr>
		</table>>, URL="./WebworkSOAPHandlerService.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//edu.missouri.math.webwork.WebworkSOAP.WebworkSOAPHandlerServiceLocator extends org.apache.axis.client.Service
	c569:p -> c557:p [dir=back,arrowtail=empty];
	//edu.missouri.math.webwork.WebworkSOAP.WebworkSOAPHandlerServiceLocator implements edu.missouri.math.webwork.WebworkSOAP.WebworkSOAPHandlerService
	c558:p -> c557:p [dir=back,arrowtail=empty,style=dashed];
	// org.apache.axis.client.Service
	c569 [label=<<table title="org.apache.axis.client.Service" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/apache/axis/client/Service.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> org.apache.axis.client.Service </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - engine : org.apache.axis.AxisEngine </td></tr>
<tr><td align="left" balign="left"> - config : org.apache.axis.EngineConfiguration </td></tr>
<tr><td align="left" balign="left"> - serviceName : javax.xml.namespace.QName </td></tr>
<tr><td align="left" balign="left"> - wsdlLocation : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - wsdlService : javax.wsdl.Service </td></tr>
<tr><td align="left" balign="left"> - maintainSession : boolean </td></tr>
<tr><td align="left" balign="left"> - registry : org.apache.axis.client.Service.HandlerRegistryImpl </td></tr>
<tr><td align="left" balign="left"> - wsdlParser : org.apache.axis.wsdl.gen.Parser </td></tr>
<tr><td align="left" balign="left"> - cachedWSDL : java.util.Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - cachingWSDL : boolean </td></tr>
<tr><td align="left" balign="left"> # _call : org.apache.axis.client.Call </td></tr>
<tr><td align="left" balign="left"> - transportImpls : java.util.Hashtable&lt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Service() </td></tr>
<tr><td align="left" balign="left"> + Service(arg0 : javax.xml.namespace.QName) </td></tr>
<tr><td align="left" balign="left"> + Service(arg0 : org.apache.axis.EngineConfiguration, arg1 : org.apache.axis.client.AxisClient) </td></tr>
<tr><td align="left" balign="left"> + Service(arg0 : org.apache.axis.EngineConfiguration) </td></tr>
<tr><td align="left" balign="left"> + Service(arg0 : java.net.URL, arg1 : javax.xml.namespace.QName) </td></tr>
<tr><td align="left" balign="left"> + Service(arg0 : org.apache.axis.wsdl.gen.Parser, arg1 : javax.xml.namespace.QName) </td></tr>
<tr><td align="left" balign="left"> + Service(arg0 : java.lang.String, arg1 : javax.xml.namespace.QName) </td></tr>
<tr><td align="left" balign="left"> + Service(arg0 : java.io.InputStream, arg1 : javax.xml.namespace.QName) </td></tr>
<tr><td align="left" balign="left"> # getWSDLService() : javax.wsdl.Service </td></tr>
<tr><td align="left" balign="left"> + getWSDLParser() : org.apache.axis.wsdl.gen.Parser </td></tr>
<tr><td align="left" balign="left"> # getAxisClient() : org.apache.axis.client.AxisClient </td></tr>
<tr><td align="left" balign="left"> - initService(arg0 : java.lang.String, arg1 : javax.xml.namespace.QName) </td></tr>
<tr><td align="left" balign="left"> - initService(arg0 : java.lang.String, arg1 : org.w3c.dom.Document, arg2 : javax.xml.namespace.QName) </td></tr>
<tr><td align="left" balign="left"> - initService(arg0 : org.apache.axis.wsdl.gen.Parser, arg1 : javax.xml.namespace.QName) </td></tr>
<tr><td align="left" balign="left"> + getPort(arg0 : javax.xml.namespace.QName, arg1 : java.lang.Class&lt;&gt;) : java.rmi.Remote </td></tr>
<tr><td align="left" balign="left"> - getGeneratedStub(arg0 : javax.xml.namespace.QName, arg1 : java.lang.Class&lt;&gt;) : java.rmi.Remote </td></tr>
<tr><td align="left" balign="left"> + getPort(arg0 : java.lang.Class&lt;&gt;) : java.rmi.Remote </td></tr>
<tr><td align="left" balign="left"> + getPort(arg0 : java.lang.String, arg1 : java.lang.Class&lt;&gt;) : java.rmi.Remote </td></tr>
<tr><td align="left" balign="left"> - getPort(arg0 : java.lang.String, arg1 : javax.xml.namespace.QName, arg2 : java.lang.Class&lt;&gt;) : java.rmi.Remote </td></tr>
<tr><td align="left" balign="left"> + createCall(arg0 : javax.xml.namespace.QName) : javax.xml.rpc.Call </td></tr>
<tr><td align="left" balign="left"> + createCall(arg0 : javax.xml.namespace.QName, arg1 : java.lang.String) : javax.xml.rpc.Call </td></tr>
<tr><td align="left" balign="left"> + createCall(arg0 : javax.xml.namespace.QName, arg1 : javax.xml.namespace.QName) : javax.xml.rpc.Call </td></tr>
<tr><td align="left" balign="left"> + createCall() : javax.xml.rpc.Call </td></tr>
<tr><td align="left" balign="left"> + getCalls(arg0 : javax.xml.namespace.QName) : javax.xml.rpc.Call[] </td></tr>
<tr><td align="left" balign="left"> + getHandlerRegistry() : javax.xml.rpc.handler.HandlerRegistry </td></tr>
<tr><td align="left" balign="left"> + getWSDLDocumentLocation() : java.net.URL </td></tr>
<tr><td align="left" balign="left"> + getServiceName() : javax.xml.namespace.QName </td></tr>
<tr><td align="left" balign="left"> + getPorts() : java.util.Iterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setTypeMappingRegistry(arg0 : javax.xml.rpc.encoding.TypeMappingRegistry) </td></tr>
<tr><td align="left" balign="left"> + getTypeMappingRegistry() : javax.xml.rpc.encoding.TypeMappingRegistry </td></tr>
<tr><td align="left" balign="left"> + getReference() : javax.naming.Reference </td></tr>
<tr><td align="left" balign="left"> + setEngine(arg0 : org.apache.axis.AxisEngine) </td></tr>
<tr><td align="left" balign="left"> + getEngine() : org.apache.axis.AxisEngine </td></tr>
<tr><td align="left" balign="left"> + setEngineConfiguration(arg0 : org.apache.axis.EngineConfiguration) </td></tr>
<tr><td align="left" balign="left"> # getEngineConfiguration() : org.apache.axis.EngineConfiguration </td></tr>
<tr><td align="left" balign="left"> + setMaintainSession(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + getMaintainSession() : boolean </td></tr>
<tr><td align="left" balign="left"> + getCall() : org.apache.axis.client.Call </td></tr>
<tr><td align="left" balign="left"> + getCacheWSDL() : boolean </td></tr>
<tr><td align="left" balign="left"> + setCacheWSDL(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> ~ registerTransportForURL(arg0 : java.net.URL, arg1 : org.apache.axis.client.Transport) </td></tr>
<tr><td align="left" balign="left"> ~ getTransportForURL(arg0 : java.net.URL) : org.apache.axis.client.Transport </td></tr>
<tr><td align="left" balign="left"> + setTypeMappingVersion(arg0 : java.lang.String) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/org/apache/axis/client/Service.html", fontname="arial", fontcolor="black", fontsize=10.0];
}

